/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { InViewportModule } from '@thisissoon/angular-inviewport';
import { ScrollSpyDirective } from './scroll-spy/scroll-spy.directive';
import { ScrollSpySectionComponent } from './scroll-spy-section/scroll-spy-section.component';
import { ScrollSpyItemDirective } from './scroll-spy-item/scroll-spy-item.directive';
import { ScrollSpyService } from './scroll-spy-service/scroll-spy.service';
/** @type {?} */
const directives = [ScrollSpyDirective, ScrollSpyItemDirective];
/** @type {?} */
const components = [ScrollSpySectionComponent];
/** @type {?} */
const providers = [ScrollSpyService];
/**
 * A simple lightweight library for Angular which automatically
 * updates links to indicate the currently active section in the viewport
 *
 */
export class ScrollSpyModule {
    /**
     * Specify a static method for root module to ensure providers are
     * only provided once but allows the module to still be imported
     * into other modules without reproviding services.
     *
     * \@memberof ScrollSpyModule
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: ScrollSpyModule,
            providers: [...providers],
        };
    }
}
ScrollSpyModule.decorators = [
    { type: NgModule, args: [{
                imports: [InViewportModule],
                declarations: [...directives, ...components],
                exports: [...directives, ...components],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXNweS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGhpc2lzc29vbi9hbmd1bGFyLXNjcm9sbHNweS8iLCJzb3VyY2VzIjpbImFwcC9zY3JvbGwtc3B5L3Njcm9sbC1zcHkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFpQyxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVsRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUM5RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNyRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQzs7TUFFckUsVUFBVSxHQUFVLENBQUMsa0JBQWtCLEVBQUUsc0JBQXNCLENBQUM7O01BRWhFLFVBQVUsR0FBVSxDQUFDLHlCQUF5QixDQUFDOztNQUUvQyxTQUFTLEdBQWUsQ0FBQyxnQkFBZ0IsQ0FBQzs7Ozs7O0FBWWhELE1BQU0sT0FBTyxlQUFlOzs7Ozs7Ozs7SUFRbkIsTUFBTSxDQUFDLE9BQU87UUFDbkIsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDO1NBQzFCLENBQUM7SUFDSixDQUFDOzs7WUFsQkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2dCQUMzQixZQUFZLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxHQUFHLFVBQVUsQ0FBQztnQkFDNUMsT0FBTyxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsR0FBRyxVQUFVLENBQUM7YUFDeEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEluVmlld3BvcnRNb2R1bGUgfSBmcm9tICdAdGhpc2lzc29vbi9hbmd1bGFyLWludmlld3BvcnQnO1xuXG5pbXBvcnQgeyBTY3JvbGxTcHlEaXJlY3RpdmUgfSBmcm9tICcuL3Njcm9sbC1zcHkvc2Nyb2xsLXNweS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2Nyb2xsU3B5U2VjdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vc2Nyb2xsLXNweS1zZWN0aW9uL3Njcm9sbC1zcHktc2VjdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2Nyb2xsU3B5SXRlbURpcmVjdGl2ZSB9IGZyb20gJy4vc2Nyb2xsLXNweS1pdGVtL3Njcm9sbC1zcHktaXRlbS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2Nyb2xsU3B5U2VydmljZSB9IGZyb20gJy4vc2Nyb2xsLXNweS1zZXJ2aWNlL3Njcm9sbC1zcHkuc2VydmljZSc7XG5cbmNvbnN0IGRpcmVjdGl2ZXM6IGFueVtdID0gW1Njcm9sbFNweURpcmVjdGl2ZSwgU2Nyb2xsU3B5SXRlbURpcmVjdGl2ZV07XG5cbmNvbnN0IGNvbXBvbmVudHM6IGFueVtdID0gW1Njcm9sbFNweVNlY3Rpb25Db21wb25lbnRdO1xuXG5jb25zdCBwcm92aWRlcnM6IFByb3ZpZGVyW10gPSBbU2Nyb2xsU3B5U2VydmljZV07XG5cbi8qKlxuICogQSBzaW1wbGUgbGlnaHR3ZWlnaHQgbGlicmFyeSBmb3IgQW5ndWxhciB3aGljaCBhdXRvbWF0aWNhbGx5XG4gKiB1cGRhdGVzIGxpbmtzIHRvIGluZGljYXRlIHRoZSBjdXJyZW50bHkgYWN0aXZlIHNlY3Rpb24gaW4gdGhlIHZpZXdwb3J0XG4gKlxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbSW5WaWV3cG9ydE1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogWy4uLmRpcmVjdGl2ZXMsIC4uLmNvbXBvbmVudHNdLFxuICBleHBvcnRzOiBbLi4uZGlyZWN0aXZlcywgLi4uY29tcG9uZW50c10sXG59KVxuZXhwb3J0IGNsYXNzIFNjcm9sbFNweU1vZHVsZSB7XG4gIC8qKlxuICAgKiBTcGVjaWZ5IGEgc3RhdGljIG1ldGhvZCBmb3Igcm9vdCBtb2R1bGUgdG8gZW5zdXJlIHByb3ZpZGVycyBhcmVcbiAgICogb25seSBwcm92aWRlZCBvbmNlIGJ1dCBhbGxvd3MgdGhlIG1vZHVsZSB0byBzdGlsbCBiZSBpbXBvcnRlZFxuICAgKiBpbnRvIG90aGVyIG1vZHVsZXMgd2l0aG91dCByZXByb3ZpZGluZyBzZXJ2aWNlcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIFNjcm9sbFNweU1vZHVsZVxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogU2Nyb2xsU3B5TW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbLi4ucHJvdmlkZXJzXSxcbiAgICB9O1xuICB9XG59XG4iXX0=