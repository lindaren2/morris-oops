{"version":3,"sources":["ng://@thisissoon/angular-scrollspy/app/scroll-spy/scroll-spy-item/scroll-spy-item.directive.ts","ng://@thisissoon/angular-scrollspy/app/scroll-spy/scroll-spy-service/scroll-spy.service.ts","ng://@thisissoon/angular-scrollspy/app/scroll-spy/scroll-spy/scroll-spy.directive.ts","ng://@thisissoon/angular-scrollspy/app/scroll-spy/scroll-spy-section/scroll-spy-section.component.ts","node_modules/tslib/tslib.es6.js","ng://@thisissoon/angular-scrollspy/app/scroll-spy/scroll-spy.module.ts"],"names":["ScrollSpyItemDirective","cdRef","this","active","inViewport","Object","defineProperty","prototype","href","replace","detectChanges","Directive","args","selector","ChangeDetectorRef","HostBinding","Input","ScrollSpyService","spys","buffer","addSpy","id","items","_this","push","filter","i","spyId","forEach","setSpySectionStatus","sectionId","removeSpy","findIndex","s","splice","spy","find","item","section","firstInViewport","Injectable","ScrollSpyDirective","scrollSpySvc","ngAfterViewInit","ngOnDestroy","ContentChildren","ScrollSpySectionComponent","onInViewportChange","for","Component","template","__read","o","n","m","Symbol","iterator","r","e","call","ar","next","done","value","error","__spread","arguments","length","concat","directives","components","providers","ScrollSpyModule","forRoot","ngModule","NgModule","imports","InViewportModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n/**\n * A directive used to add an `active` class to a nav item\n * when the section is in the viewport\n *\n * @example\n * ```html\n * <a snScrollSpyItem for=\"foo\" href=\"#section1\">Section 1</a>\n * ```\n *\n */\n@Directive({\n  selector: '[snScrollSpyItem]',\n})\nexport class ScrollSpyItemDirective {\n  /**\n   * True if the nav item is the active item in the `items` list\n   * for `ScrollSpyDirective` instance\n   *\n   * @memberof ScrollSpyItemDirective\n   */\n  @HostBinding('class.active')\n  public active = false;\n  /**\n   * ID of `ScrollSpyDirective` instance\n   *\n   * @memberof ScrollSpyItemDirective\n   */\n  @Input()\n  public for: string;\n  /**\n   * Hash for section to link to\n   *\n   * @memberof ScrollSpyItemDirective\n   */\n  @Input()\n  public href: string;\n  /**\n   * If true means the section is in the viewport\n   *\n   * @memberof ScrollSpyItemDirective\n   */\n  public inViewport = false;\n  /**\n   * Id of section that links navigates to\n   *\n   * @readonly\n   * @memberof ScrollSpyItemDirective\n   */\n  public get section(): string {\n    return this.href.replace('#', '');\n  }\n  /**\n   * Creates an instance of ScrollSpyItemDirective.\n   * @memberof ScrollSpyItemDirective\n   */\n  constructor(private cdRef: ChangeDetectorRef) {}\n  /**\n   * Manually trigger change detection\n   *\n   * @memberof ScrollSpyItemDirective\n   */\n  public detectChanges(): void {\n    this.cdRef.detectChanges();\n  }\n}\n","import { Injectable, QueryList } from '@angular/core';\n\nimport { ScrollSpyItemDirective } from '../scroll-spy-item/scroll-spy-item.directive';\nimport { Spy } from '../shared/spy.model';\n\n/**\n * Service that stores a list of `Spy`'s and the state\n * of their nav items `inViewport` and `active` state\n *\n */\n@Injectable()\nexport class ScrollSpyService {\n  /**\n   * List of `Spy`'s\n   *\n   * @memberof ScrollSpyService\n   */\n  public spys: Spy[] = [];\n  /**\n   * Stores requests to add items to spy when spy hasn't been created\n   * yet. Once spy has been added then request will be made again.\n   *\n   * @memberof ScrollSpyService\n   */\n  public buffer: any[] = [];\n  /**\n   * Add spy to list of `spys`\n   *\n   * @memberof ScrollSpyService\n   */\n  public addSpy(id: string, items: QueryList<ScrollSpyItemDirective>): void {\n    this.spys.push({ id, items });\n    const buffer = this.buffer.filter(i => i.spyId === id);\n    this.buffer = this.buffer.filter(i => i.spyId !== id);\n    buffer.forEach(i =>\n      this.setSpySectionStatus(i.sectionId, i.spyId, i.inViewport),\n    );\n  }\n  /**\n   * Remove spy from list of `spys`\n   *\n   * @memberof ScrollSpyService\n   */\n  public removeSpy(id: string): void {\n    const i = this.spys.findIndex(s => s.id === id);\n    this.spys.splice(i, 1);\n  }\n  /**\n   * Set the `inViewport` status for a spy item then sets the active\n   * to true for the first item in the list that has `inViewport`\n   * set to true\n   *\n   * @memberof ScrollSpyService\n   */\n  public setSpySectionStatus(\n    sectionId: string,\n    spyId: string,\n    inViewport: boolean,\n  ): void {\n    const spy = this.spys.find(s => s.id === spyId);\n    if (!spy) {\n      this.buffer.push({ sectionId, spyId, inViewport });\n      return;\n    }\n    const item = spy.items.find(i => i.section === sectionId);\n    if (!item) {\n      return;\n    }\n\n    item.inViewport = inViewport;\n    const firstInViewport = spy.items.filter(i => i.inViewport)[0];\n    spy.items.forEach(i => (i.active = false));\n\n    if (firstInViewport) {\n      firstInViewport.active = true;\n      firstInViewport.detectChanges();\n    }\n  }\n}\n","import {\n  Directive,\n  ContentChildren,\n  QueryList,\n  AfterViewInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\n\nimport { ScrollSpyItemDirective } from '../scroll-spy-item/scroll-spy-item.directive';\nimport { ScrollSpyService } from '../scroll-spy-service/scroll-spy.service';\n\n/**\n * Adds `active` class to navigation links when section is in the viewport.\n * Used in conjuction with `snScrollItem` directive which should be added\n * to anchor links in the nav\n *\n * @example\n * ```\n * <ul role=\"navigation\" snScrollSpy id=\"foo\">\n *  <li><a snScrollSpyItem for=\"foo\" href=\"#section1\">Section 1</a></li>\n *  <li><a snScrollSpyItem for=\"foo\" href=\"#section2\">Section 2</a></li>\n *  <li><a snScrollSpyItem for=\"foo\" href=\"#section3\">Section 3</a></li>\n *  <li><a snScrollSpyItem for=\"foo\" href=\"#section4\">Section 4</a></li>\n * </ul>\n * ```\n *\n */\n@Directive({\n  selector: '[snScrollSpy]',\n})\nexport class ScrollSpyDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Collection of `ScrollSpyItem`. They are the list of\n   * nav items.\n   *\n   * @memberof ScrollSpyDirective\n   */\n  @ContentChildren(ScrollSpyItemDirective)\n  public items: QueryList<ScrollSpyItemDirective>;\n  /**\n   * ID of scrollSpy instance\n   *\n   * @memberof ScrollSpyDirective\n   */\n  @Input()\n  public id: string;\n  /**\n   * Creates an instance of ScrollSpyDirective.\n   * @memberof ScrollSpyDirective\n   */\n  constructor(private scrollSpySvc: ScrollSpyService) {}\n  /**\n   * Adds spy to list of spys in `ScrollSpyService`\n   *\n   * @memberof ScrollSpyDirective\n   */\n  public ngAfterViewInit(): void {\n    this.scrollSpySvc.addSpy(this.id, this.items);\n  }\n  /**\n   * Remove spy from list of spys when directive is destroyed\n   *\n   * @memberof ScrollSpyDirective\n   */\n  public ngOnDestroy(): void {\n    this.scrollSpySvc.removeSpy(this.id);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ScrollSpyService } from '../scroll-spy-service/scroll-spy.service';\n\n/**\n * A component to wrap section content within that will update the\n * `ScrollSpyService` when it's in view\n *\n * @example\n * ```html\n *  <sn-scroll-spy-section id=\"section1\" for=\"foo\">\n *    ...\n *  </sn-scroll-spy-section>\n * ```\n */\n@Component({\n  selector: 'sn-scroll-spy-section',\n  templateUrl: './scroll-spy-section.component.html',\n  styleUrls: ['./scroll-spy-section.component.scss'],\n})\nexport class ScrollSpySectionComponent {\n  /**\n   * Identifies the section\n   *\n   * @memberof ScrollSpySectionComponent\n   */\n  @Input()\n  public id: string;\n  /**\n   * Specifies which `ScrollSpy` instance to update\n   *\n   * @memberof ScrollSpySectionComponent\n   */\n  @Input()\n  public for: string;\n  /**\n   * Creates an instance of ScrollSpySectionComponent.\n   * @memberof ScrollSpySectionComponent\n   */\n  constructor(private scrollSpySvc: ScrollSpyService) {}\n  /**\n   * Updates `ScrollSpy` section when element enters/leaves viewport\n   *\n   * @memberof ScrollSpySectionComponent\n   */\n  public onInViewportChange(inViewport: boolean): void {\n    this.scrollSpySvc.setSpySectionStatus(this.id, this.for, inViewport);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { InViewportModule } from '@thisissoon/angular-inviewport';\n\nimport { ScrollSpyDirective } from './scroll-spy/scroll-spy.directive';\nimport { ScrollSpySectionComponent } from './scroll-spy-section/scroll-spy-section.component';\nimport { ScrollSpyItemDirective } from './scroll-spy-item/scroll-spy-item.directive';\nimport { ScrollSpyService } from './scroll-spy-service/scroll-spy.service';\n\nconst directives: any[] = [ScrollSpyDirective, ScrollSpyItemDirective];\n\nconst components: any[] = [ScrollSpySectionComponent];\n\nconst providers: Provider[] = [ScrollSpyService];\n\n/**\n * A simple lightweight library for Angular which automatically\n * updates links to indicate the currently active section in the viewport\n *\n */\n@NgModule({\n  imports: [InViewportModule],\n  declarations: [...directives, ...components],\n  exports: [...directives, ...components],\n})\nexport class ScrollSpyModule {\n  /**\n   * Specify a static method for root module to ensure providers are\n   * only provided once but allows the module to still be imported\n   * into other modules without reproviding services.\n   *\n   * @memberof ScrollSpyModule\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ScrollSpyModule,\n      providers: [...providers],\n    };\n  }\n}\n"]}