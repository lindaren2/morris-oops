/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { InViewportDirective } from './in-viewport.directive';
import { WINDOW } from '../window/window-token';
import { WINDOW_MOCK } from '../window/window-mock';
/**
 * A simple lightweight library for Angular with other dependencies
 * that detects when an element is within the browsers viewport and adds a
 * sn-viewport--in or sn-viewport--out class to the element.
 */
var InViewportModule = /** @class */ (function () {
    function InViewportModule() {
    }
    /**
     * @return {?}
     */
    InViewportModule.forServer = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: InViewportModule,
            providers: [{ provide: WINDOW, useValue: WINDOW_MOCK }]
        };
    };
    InViewportModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [InViewportDirective],
                    exports: [InViewportDirective]
                },] }
    ];
    return InViewportModule;
}());
export { InViewportModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW4tdmlld3BvcnQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRoaXNpc3Nvb24vYW5ndWxhci1pbnZpZXdwb3J0LyIsInNvdXJjZXMiOlsiYXBwL2luLXZpZXdwb3J0L2luLXZpZXdwb3J0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7O0FBT3BEO0lBQUE7SUFXQSxDQUFDOzs7O0lBTlEsMEJBQVM7OztJQUFoQjtRQUNFLE9BQU87WUFDTCxRQUFRLEVBQUUsZ0JBQWdCO1lBQzFCLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLENBQUM7U0FDeEQsQ0FBQztJQUNKLENBQUM7O2dCQVZGLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztvQkFDbkMsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUM7aUJBQy9COztJQVFELHVCQUFDO0NBQUEsQUFYRCxJQVdDO1NBUFksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgSW5WaWV3cG9ydERpcmVjdGl2ZSB9IGZyb20gJy4vaW4tdmlld3BvcnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uL3dpbmRvdy93aW5kb3ctdG9rZW4nO1xuaW1wb3J0IHsgV0lORE9XX01PQ0sgfSBmcm9tICcuLi93aW5kb3cvd2luZG93LW1vY2snO1xuXG4vKipcbiAqIEEgc2ltcGxlIGxpZ2h0d2VpZ2h0IGxpYnJhcnkgZm9yIEFuZ3VsYXIgd2l0aCBvdGhlciBkZXBlbmRlbmNpZXNcbiAqIHRoYXQgZGV0ZWN0cyB3aGVuIGFuIGVsZW1lbnQgaXMgd2l0aGluIHRoZSBicm93c2VycyB2aWV3cG9ydCBhbmQgYWRkcyBhXG4gKiBzbi12aWV3cG9ydC0taW4gb3Igc24tdmlld3BvcnQtLW91dCBjbGFzcyB0byB0aGUgZWxlbWVudC5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbSW5WaWV3cG9ydERpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtJblZpZXdwb3J0RGlyZWN0aXZlXVxufSlcbmV4cG9ydCBjbGFzcyBJblZpZXdwb3J0TW9kdWxlIHtcbiAgc3RhdGljIGZvclNlcnZlcigpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IEluVmlld3BvcnRNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFdJTkRPVywgdXNlVmFsdWU6IFdJTkRPV19NT0NLIH1dXG4gICAgfTtcbiAgfVxufVxuIl19