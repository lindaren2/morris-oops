/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/** @type {?} */
export var WINDOW_MOCK_WITHOUT_INTERSECTION_OBSERVER = {
    closed: null,
    defaultStatus: null,
    document: null,
    frameElement: null,
    frames: null,
    history: null,
    innerHeight: null,
    innerWidth: null,
    length: null,
    localStorage: null,
    location: null,
    name: null,
    navigator: null,
    opener: null,
    outerHeight: null,
    outerWidth: null,
    pageXOffset: null,
    pageYOffset: null,
    parent: null,
    screen: null,
    screenLeft: null,
    screenTop: null,
    screenX: null,
    screenY: null,
    sessionStorage: null,
    scrollX: null,
    scrollY: null,
    self: null,
    status: null,
    top: null,
    addEventListener: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    alert: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    atob: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    blur: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    btoa: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    clearInterval: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    clearTimeout: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    close: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    confirm: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    focus: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    getComputedStyle: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    getSelection: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    matchMedia: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    moveBy: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    moveTo: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    open: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    print: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    prompt: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    resizeBy: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    resizeTo: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    removeEventListener: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    scroll: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    scrollBy: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    scrollTo: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    setInterval: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    setTimeout: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    },
    stop: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }
};
/** @type {?} */
export var WINDOW_MOCK = tslib_1.__assign({}, WINDOW_MOCK_WITHOUT_INTERSECTION_OBSERVER, { IntersectionObserver: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return ({
            observe: function () { return null; },
            unobserve: function () { return null; }
        });
    }, IntersectionObserverEntry: /** @class */ (function () {
        function IntersectionObserverEntryMock() {
        }
        return IntersectionObserverEntryMock;
    }()) });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LW1vY2suanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGhpc2lzc29vbi9hbmd1bGFyLWludmlld3BvcnQvIiwic291cmNlcyI6WyJhcHAvd2luZG93L3dpbmRvdy1tb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU0sS0FBTyx5Q0FBeUMsR0FBRztJQUN2RCxNQUFNLEVBQUUsSUFBSTtJQUNaLGFBQWEsRUFBRSxJQUFJO0lBQ25CLFFBQVEsRUFBRSxJQUFJO0lBQ2QsWUFBWSxFQUFFLElBQUk7SUFDbEIsTUFBTSxFQUFFLElBQUk7SUFDWixPQUFPLEVBQUUsSUFBSTtJQUNiLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLE1BQU0sRUFBRSxJQUFJO0lBQ1osWUFBWSxFQUFFLElBQUk7SUFDbEIsUUFBUSxFQUFFLElBQUk7SUFDZCxJQUFJLEVBQUUsSUFBSTtJQUNWLFNBQVMsRUFBRSxJQUFJO0lBQ2YsTUFBTSxFQUFFLElBQUk7SUFDWixXQUFXLEVBQUUsSUFBSTtJQUNqQixVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsSUFBSTtJQUNqQixXQUFXLEVBQUUsSUFBSTtJQUNqQixNQUFNLEVBQUUsSUFBSTtJQUNaLE1BQU0sRUFBRSxJQUFJO0lBQ1osVUFBVSxFQUFFLElBQUk7SUFDaEIsU0FBUyxFQUFFLElBQUk7SUFDZixPQUFPLEVBQUUsSUFBSTtJQUNiLE9BQU8sRUFBRSxJQUFJO0lBQ2IsY0FBYyxFQUFFLElBQUk7SUFDcEIsT0FBTyxFQUFFLElBQUk7SUFDYixPQUFPLEVBQUUsSUFBSTtJQUNiLElBQUksRUFBRSxJQUFJO0lBQ1YsTUFBTSxFQUFFLElBQUk7SUFDWixHQUFHLEVBQUUsSUFBSTtJQUNULGdCQUFnQixFQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJO0lBQ25DLEtB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UUFBRCxvQ0FBQztJQUFELENBQUMsQUFBdEMsTUFDNUIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgV0lORE9XX01PQ0tfV0lUSE9VVF9JTlRFUlNFQ1RJT05fT0JTRVJWRVIgPSB7XG4gIGNsb3NlZDogbnVsbCxcbiAgZGVmYXVsdFN0YXR1czogbnVsbCxcbiAgZG9jdW1lbnQ6IG51bGwsXG4gIGZyYW1lRWxlbWVudDogbnVsbCxcbiAgZnJhbWVzOiBudWxsLFxuICBoaXN0b3J5OiBudWxsLFxuICBpbm5lckhlaWdodDogbnVsbCxcbiAgaW5uZXJXaWR0aDogbnVsbCxcbiAgbGVuZ3RoOiBudWxsLFxuICBsb2NhbFN0b3JhZ2U6IG51bGwsXG4gIGxvY2F0aW9uOiBudWxsLFxuICBuYW1lOiBudWxsLFxuICBuYXZpZ2F0b3I6IG51bGwsXG4gIG9wZW5lcjogbnVsbCxcbiAgb3V0ZXJIZWlnaHQ6IG51bGwsXG4gIG91dGVyV2lkdGg6IG51bGwsXG4gIHBhZ2VYT2Zmc2V0OiBudWxsLFxuICBwYWdlWU9mZnNldDogbnVsbCxcbiAgcGFyZW50OiBudWxsLFxuICBzY3JlZW46IG51bGwsXG4gIHNjcmVlbkxlZnQ6IG51bGwsXG4gIHNjcmVlblRvcDogbnVsbCxcbiAgc2NyZWVuWDogbnVsbCxcbiAgc2NyZWVuWTogbnVsbCxcbiAgc2Vzc2lvblN0b3JhZ2U6IG51bGwsXG4gIHNjcm9sbFg6IG51bGwsXG4gIHNjcm9sbFk6IG51bGwsXG4gIHNlbGY6IG51bGwsXG4gIHN0YXR1czogbnVsbCxcbiAgdG9wOiBudWxsLFxuICBhZGRFdmVudExpc3RlbmVyOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgYWxlcnQ6ICguLi5hcmdzKSA9PiBudWxsLFxuICBhdG9iOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgYmx1cjogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGJ0b2E6ICguLi5hcmdzKSA9PiBudWxsLFxuICBjbGVhckludGVydmFsOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgY2xlYXJUaW1lb3V0OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgY2xvc2U6ICguLi5hcmdzKSA9PiBudWxsLFxuICBjb25maXJtOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgZm9jdXM6ICguLi5hcmdzKSA9PiBudWxsLFxuICBnZXRDb21wdXRlZFN0eWxlOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgZ2V0U2VsZWN0aW9uOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgbWF0Y2hNZWRpYTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIG1vdmVCeTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIG1vdmVUbzogKC4uLmFyZ3MpID0+IG51bGwsXG4gIG9wZW46ICguLi5hcmdzKSA9PiBudWxsLFxuICBwcmludDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHByb21wdDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHJlc2l6ZUJ5OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgcmVzaXplVG86ICguLi5hcmdzKSA9PiBudWxsLFxuICByZW1vdmVFdmVudExpc3RlbmVyOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgc2Nyb2xsOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgc2Nyb2xsQnk6ICguLi5hcmdzKSA9PiBudWxsLFxuICBzY3JvbGxUbzogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHNldEludGVydmFsOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgc2V0VGltZW91dDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHN0b3A6ICguLi5hcmdzKSA9PiBudWxsXG59O1xuXG5leHBvcnQgY29uc3QgV0lORE9XX01PQ0sgPSB7XG4gIC4uLldJTkRPV19NT0NLX1dJVEhPVVRfSU5URVJTRUNUSU9OX09CU0VSVkVSLFxuICBJbnRlcnNlY3Rpb25PYnNlcnZlcjogKC4uLmFyZ3MpID0+ICh7XG4gICAgb2JzZXJ2ZTogKCkgPT4gbnVsbCxcbiAgICB1bm9ic2VydmU6ICgpID0+IG51bGxcbiAgfSksXG4gIEludGVyc2VjdGlvbk9ic2VydmVyRW50cnk6IGNsYXNzIEludGVyc2VjdGlvbk9ic2VydmVyRW50cnlNb2NrIHt9XG59O1xuIl19